
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ASPAS BOOL CONJUNCAO DCLN DCLS DISJUNCAO DIVISAO DOISPONTOS ELSE FOR ID IF IGUAL LPAREN MAIOR MENOR MOD MULTIPLICACAO NUM PRD PRE PRINT REAL RETURN RPAREN SCAN SOMA SUBTRACAO UNTIL VIRG WHILEfinal : reconhecereconhece : tipos\n                 | declara\n                 | ciclos\n                 | print\n                 | scan\n                 | devolve\n                 | atribuicao\n    reconhece : tipos reconhece\n                 | declara reconhece\n                 | ciclos reconhece \n                 | print reconhece\n                 | scan reconhece\n                 | atribuicao reconhece\n    expression : expression MULTIPLICACAO termexpression : expression MULTIPLICACAO IDexpression : expression DIVISAO termexpression : expression DIVISAO IDexpression : expression SOMA IDexpression : expression SOMA termexpression : expression SUBTRACAO termexpression : expression SUBTRACAO IDexpression : NUM MOD NUMexpression : ID MOD NUMexpression : NUM MOD IDexpression : ID MOD IDfactor : NUMfactor : REALterm : factorexpression : termexpression : IDels : comparacoes\n             | term \n    els : ID\n           | BOOL\n    atribuicao : ID PRE NUM PRD IGUAL expressionatribuicao : ID PRE ID PRD IGUAL expressionatribuicao : ID IGUAL ID PRE ID PRDatribuicao : ID IGUAL ID PRE NUM PRDdeclara : ARRAY PRE NUM PRD IDdeclara : DCLN ID IGUAL expressiondeclara : DCLN IDdeclara : DCLS IDdeclara : DCLS ID IGUAL ASPAS ID ASPASconjuncao : els CONJUNCAO els\n                 | els CONJUNCAO aux\n    disjuncao : els DISJUNCAO els\n                 | els DISJUNCAO aux\n    aux : conjuncao\n           | disjuncao\n    comparacoes : expression IGUAL IGUAL expression\n                    | aux IGUAL IGUAL aux\n                    | aux MAIOR aux\n                    | aux MENOR aux\n                    | expression MAIOR expression\n                    | expression MENOR expression\n                    | term MAIOR term\n                    | term MENOR term\n                    | term IGUAL IGUAL term \n    comparacoes :  aux MAIOR IGUAL aux\n                    | aux MENOR IGUAL aux\n                    | expression MAIOR IGUAL expression\n                    | expression MENOR IGUAL expression\n                    | term MAIOR IGUAL term\n                    | term MENOR IGUAL term\n    tipos : aux\n             | expression\n             | comparacoes\n             | print\n             | devolve\n             | scan\n             | declara\n    statements : statstatements : stat statementsstat : atribuicao \n            | tipos\n            | ciclos\n    stat : atribuicao : ID IGUAL expressionif : IF tipos DOISPONTOS LPAREN statements RPAREN ELSE LPAREN statements RPARENif : IF tipos DOISPONTOS LPAREN statements RPARENsinal : SOMA\n               | SUBTRACAO\n               | MULTIPLICACAO\n               | DIVISAO\n    for : FOR ID UNTIL comparacoes VIRG sinal NUM DOISPONTOS LPAREN statements RPARENwhile : WHILE tipos DOISPONTOS LPAREN statements RPARENciclos : ifciclos : forciclos : whileprint : PRINT LPAREN ID RPARENprint : PRINT LPAREN ASPAS ID ASPAS RPAREN\n    print : PRINT LPAREN ASPAS term ASPAS RPAREN\n    print : PRINT LPAREN ASPAS ID ASPAS VIRG expression RPAREN\n    print : PRINT LPAREN expression RPARENprint : PRINT LPAREN VIRG RPARENscan : SCAN LPAREN ID RPAREN \n    devolve : RETURN LPAREN expression RPAREN'
    
_lr_action_items = {'ARRAY':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[13,13,13,13,13,13,-70,13,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,13,13,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,13,13,-40,-76,13,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,13,13,-80,-86,]),'DCLN':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[16,16,16,16,16,16,-70,16,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,16,16,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,16,16,-40,-76,16,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,16,16,-80,-86,]),'DCLS':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[17,17,17,17,17,17,-70,17,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,17,17,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,17,17,-40,-76,17,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,17,17,-80,-86,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[21,21,21,21,21,21,-70,21,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,21,21,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,21,21,-40,-76,21,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,21,21,-80,-86,]),'SCAN':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[23,23,23,23,23,23,-70,23,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,23,23,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,23,23,-40,-76,23,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,23,23,-80,-86,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[24,24,24,24,24,24,-70,24,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,24,24,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,24,24,-40,-76,24,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,24,24,-80,-86,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,25,26,27,28,29,31,32,33,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,61,62,64,65,66,67,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,110,113,115,121,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,142,143,144,145,146,147,148,149,153,154,155,156,162,164,165,166,169,170,171,172,173,174,175,176,177,184,188,189,192,193,195,],[15,15,15,15,15,15,-70,15,-66,-67,-68,-27,-31,55,56,-88,-89,-90,-30,-49,-50,68,69,68,-29,-35,-28,78,78,83,86,87,90,95,95,100,101,103,105,-42,-43,109,118,95,-69,-70,-71,-72,78,78,78,-53,78,-32,-33,-34,-54,78,-15,-16,-27,-17,-18,-19,-20,-21,-22,95,-55,95,-30,-31,-56,95,-23,-25,-31,-79,-26,-24,95,140,-57,-58,68,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,154,157,-41,159,-91,-96,-95,-64,-65,-59,-97,-98,15,15,-40,95,95,-76,15,-75,-77,-37,-36,-38,-39,-44,-92,95,-93,-81,-87,-94,15,15,-80,-86,]),'NUM':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,62,64,65,66,67,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,110,113,114,115,116,117,121,123,124,125,126,127,128,129,130,131,132,136,137,139,142,143,144,145,146,147,148,149,153,154,155,156,162,164,165,166,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,188,189,192,193,195,],[14,14,14,14,14,14,-70,14,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,14,14,-29,-35,-28,14,14,84,84,84,84,14,14,98,99,102,14,106,-42,-43,14,84,84,14,-69,-70,-71,-72,14,14,14,-53,14,-32,-33,-34,-54,14,-15,-16,-27,-17,-18,-19,-20,-21,-22,14,-55,14,-30,-31,-56,14,-23,-25,-31,-79,-26,-24,14,84,-57,84,-58,84,84,14,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,158,-41,-91,-96,-95,-64,-65,-59,-97,-98,14,14,-40,14,14,-76,14,-75,-77,-37,-36,-38,-39,-44,-92,14,-93,-81,187,-82,-83,-84,-85,-87,-94,14,14,-80,-86,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[27,27,27,27,27,27,-70,27,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,27,27,-40,-76,27,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,27,27,-80,-86,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[28,28,28,28,28,28,-70,28,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,28,28,-40,-76,28,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,28,28,-80,-86,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[29,29,29,29,29,29,-70,29,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,29,29,-40,-76,29,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,29,29,-80,-86,]),'BOOL':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,41,42,55,56,64,65,66,67,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,121,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,162,164,165,166,169,170,171,172,173,174,176,177,184,188,189,192,193,195,],[32,32,32,32,32,32,-70,32,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,32,32,-29,-35,-28,32,32,-42,-43,-69,-70,-71,-72,32,32,32,-53,32,-32,-33,-34,-54,32,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,32,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,32,32,-40,-76,32,-75,-77,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,32,32,-80,-86,]),'REAL':([0,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,27,29,31,32,33,41,42,43,44,45,46,48,49,53,55,56,57,58,59,62,64,65,66,67,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,110,113,114,115,116,117,121,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,155,156,162,164,165,166,169,170,171,172,173,174,175,176,177,184,188,189,192,193,195,],[33,33,33,33,33,33,-70,33,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,33,33,-29,-35,-28,33,33,33,33,33,33,33,33,33,-42,-43,33,33,33,33,-69,-70,-71,-72,33,33,33,-53,33,-32,-33,-34,-54,33,-15,-16,-27,-17,-18,-19,-20,-21,-22,33,-55,33,-30,-31,-56,33,-23,-25,-31,-79,-26,-24,33,33,-57,33,-58,33,33,33,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,33,33,-40,33,33,-76,33,-75,-77,-37,-36,-38,-39,-44,-92,33,-93,-81,-87,-94,33,33,-80,-86,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,15,18,19,20,22,25,26,31,32,33,34,35,36,37,38,39,55,56,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,154,169,170,171,172,173,174,176,177,184,188,193,195,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,-29,-35,-28,-9,-10,-11,-12,-13,-14,-42,-43,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,-40,-37,-36,-38,-39,-44,-92,-93,-81,-87,-94,-80,-86,]),'DOISPONTOS':([10,11,12,14,22,25,26,31,32,33,55,56,63,64,65,66,67,68,70,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,154,173,174,176,187,188,],[-66,-67,-68,-27,-30,-49,-50,-29,-35,-28,-42,-43,120,-69,-70,-71,-72,-31,122,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,-40,-44,-92,-93,190,-94,]),'RPAREN':([10,11,12,14,15,18,19,20,22,25,26,31,32,33,55,56,64,65,66,67,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,109,111,112,113,115,118,119,123,124,125,126,127,128,129,130,131,132,137,139,142,143,144,145,146,147,148,149,153,154,160,161,162,163,164,165,166,168,169,170,171,172,173,174,176,177,178,184,185,188,189,191,192,193,194,195,],[-66,-67,-68,-27,-31,-88,-89,-90,-30,-49,-50,-29,-35,-28,-42,-43,-69,-70,-71,-72,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-31,-79,-26,-24,139,142,143,-57,-58,147,148,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-41,-91,-96,-95,-64,-65,-59,-97,-98,-78,-78,-40,174,176,-76,177,-73,-75,-77,184,-37,-36,-38,-39,-44,-92,-93,-81,-74,-87,188,-94,-78,193,-78,-80,195,-86,]),'IGUAL':([10,11,14,15,22,25,26,31,32,33,40,41,42,47,48,49,55,56,58,59,60,68,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,134,135,144,145,146,151,152,],[40,47,-27,53,60,-49,-50,-29,-35,-28,73,75,81,91,93,97,107,108,114,116,117,-31,40,-32,60,-31,47,40,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,-45,40,-47,40,40,40,40,-51,-62,-63,155,156,-64,-65,-59,40,60,]),'MAIOR':([10,11,14,15,22,25,26,31,32,33,68,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,144,145,146,151,152,],[41,48,-27,-31,58,-49,-50,-29,-35,-28,-31,41,-32,58,-31,48,41,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,-45,41,-47,41,41,41,41,-51,-62,-63,-64,-65,-59,41,58,]),'MENOR':([10,11,14,15,22,25,26,31,32,33,68,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,144,145,146,151,152,],[42,49,-27,-31,59,-49,-50,-29,-35,-28,-31,42,-32,59,-31,49,42,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,-45,42,-47,42,42,42,42,-51,-62,-63,-64,-65,-59,42,59,]),'MULTIPLICACAO':([11,14,15,22,31,33,68,77,78,79,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,109,112,119,130,131,132,137,152,167,169,170,185,],[43,-27,-31,-30,-29,-28,-31,-30,-31,43,-15,-16,-27,-17,-18,-19,-20,-21,-22,43,-30,-31,43,-23,-25,-31,43,-26,-24,-31,43,43,43,43,43,43,-30,182,43,43,43,]),'DIVISAO':([11,14,15,22,31,33,68,77,78,79,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,109,112,119,130,131,132,137,152,167,169,170,185,],[44,-27,-31,-30,-29,-28,-31,-30,-31,44,-15,-16,-27,-17,-18,-19,-20,-21,-22,44,-30,-31,44,-23,-25,-31,44,-26,-24,-31,44,44,44,44,44,44,-30,183,44,44,44,]),'SOMA':([11,14,15,22,31,33,68,77,78,79,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,109,112,119,130,131,132,137,152,167,169,170,185,],[45,-27,-31,-30,-29,-28,-31,-30,-31,45,-15,-16,-27,-17,-18,-19,-20,-21,-22,45,-30,-31,45,-23,-25,-31,45,-26,-24,-31,45,45,45,45,45,45,-30,180,45,45,45,]),'SUBTRACAO':([11,14,15,22,31,33,68,77,78,79,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,103,104,105,106,109,112,119,130,131,132,137,152,167,169,170,185,],[46,-27,-31,-30,-29,-28,-31,-30,-31,46,-15,-16,-27,-17,-18,-19,-20,-21,-22,46,-30,-31,46,-23,-25,-31,46,-26,-24,-31,46,46,46,46,46,46,-30,181,46,46,46,]),'CONJUNCAO':([12,14,15,22,25,26,30,31,32,33,68,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,144,145,146,150,152,],[-32,-27,-34,-33,-49,-50,71,-29,-35,-28,-34,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,71,-46,71,-48,-52,-60,-61,-51,-62,-63,-64,-65,-59,-32,-33,]),'DISJUNCAO':([12,14,15,22,25,26,30,31,32,33,68,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,144,145,146,150,152,],[-32,-27,-34,-33,-49,-50,72,-29,-35,-28,-34,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,72,-46,72,-48,-52,-60,-61,-51,-62,-63,-64,-65,-59,-32,-33,]),'PRE':([13,15,103,],[50,52,136,]),'MOD':([14,15,68,78,95,103,109,],[51,54,54,54,54,54,54,]),'VIRG':([14,25,26,31,32,33,57,74,76,77,78,80,82,83,84,85,86,87,88,89,90,92,94,95,96,99,100,105,106,113,115,123,124,125,126,127,128,129,130,131,132,144,145,146,150,160,],[-27,-49,-50,-29,-35,-28,111,-53,-32,-33,-34,-54,-15,-16,-27,-17,-18,-19,-20,-21,-22,-55,-30,-31,-56,-23,-25,-26,-24,-57,-58,-45,-46,-47,-48,-52,-60,-61,-51,-62,-63,-64,-65,-59,167,175,]),'LPAREN':([21,23,24,120,122,186,190,],[57,61,62,149,153,189,192,]),'ASPAS':([31,33,57,84,108,140,141,159,],[-29,-28,110,-27,138,160,161,173,]),'UNTIL':([69,],[121,]),'PRD':([98,101,102,157,158,],[133,134,135,171,172,]),'ELSE':([177,],[186,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'final':([0,],[1,]),'reconhece':([0,3,4,5,6,7,9,],[2,34,35,36,37,38,39,]),'tipos':([0,3,4,5,6,7,9,27,29,149,153,164,189,192,],[3,3,3,3,3,3,3,63,70,162,162,162,162,162,]),'declara':([0,3,4,5,6,7,9,27,29,149,153,164,189,192,],[4,4,4,4,4,4,4,67,67,67,67,67,67,67,]),'ciclos':([0,3,4,5,6,7,9,149,153,164,189,192,],[5,5,5,5,5,5,5,166,166,166,166,166,]),'print':([0,3,4,5,6,7,9,27,29,149,153,164,189,192,],[6,6,6,6,6,6,6,64,64,64,64,64,64,64,]),'scan':([0,3,4,5,6,7,9,27,29,149,153,164,189,192,],[7,7,7,7,7,7,7,66,66,66,66,66,66,66,]),'devolve':([0,3,4,5,6,7,9,27,29,149,153,164,189,192,],[8,8,8,8,8,8,8,65,65,65,65,65,65,65,]),'atribuicao':([0,3,4,5,6,7,9,149,153,164,189,192,],[9,9,9,9,9,9,9,165,165,165,165,165,]),'aux':([0,3,4,5,6,7,9,27,29,41,42,71,72,73,75,81,121,149,153,164,189,192,],[10,10,10,10,10,10,10,10,10,74,80,124,126,127,128,129,151,10,10,10,10,10,]),'expression':([0,3,4,5,6,7,9,27,29,41,42,48,49,53,57,62,71,72,73,75,81,91,93,97,107,121,149,153,155,156,164,175,189,192,],[11,11,11,11,11,11,11,11,11,79,79,92,96,104,112,119,79,79,79,79,79,130,131,132,137,79,11,11,169,170,11,185,11,11,]),'comparacoes':([0,3,4,5,6,7,9,27,29,41,42,71,72,73,75,81,121,149,153,164,189,192,],[12,12,12,12,12,12,12,12,12,76,76,76,76,76,76,76,150,12,12,12,12,12,]),'if':([0,3,4,5,6,7,9,149,153,164,189,192,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'for':([0,3,4,5,6,7,9,149,153,164,189,192,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while':([0,3,4,5,6,7,9,149,153,164,189,192,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'term':([0,3,4,5,6,7,9,27,29,41,42,43,44,45,46,48,49,53,57,58,59,62,71,72,73,75,81,91,93,97,107,110,114,116,117,121,149,153,155,156,164,175,189,192,],[22,22,22,22,22,22,22,22,22,77,77,82,85,88,89,94,94,94,94,113,115,94,77,77,77,77,77,94,94,94,94,141,144,145,146,152,22,22,94,94,22,94,22,22,]),'conjuncao':([0,3,4,5,6,7,9,27,29,41,42,71,72,73,75,81,121,149,153,164,189,192,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'disjuncao':([0,3,4,5,6,7,9,27,29,41,42,71,72,73,75,81,121,149,153,164,189,192,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'els':([0,3,4,5,6,7,9,27,29,41,42,71,72,73,75,81,121,149,153,164,189,192,],[30,30,30,30,30,30,30,30,30,30,30,123,125,30,30,30,30,30,30,30,30,30,]),'factor':([0,3,4,5,6,7,9,27,29,41,42,43,44,45,46,48,49,53,57,58,59,62,71,72,73,75,81,91,93,97,107,110,114,116,117,121,149,153,155,156,164,175,189,192,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'statements':([149,153,164,189,192,],[163,168,178,191,194,]),'stat':([149,153,164,189,192,],[164,164,164,164,164,]),'sinal':([167,],[179,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> final","S'",1,None,None,None),
  ('final -> reconhece','final',1,'p_final','myGramar.py',18),
  ('reconhece -> tipos','reconhece',1,'p_reconhece','myGramar.py',23),
  ('reconhece -> declara','reconhece',1,'p_reconhece','myGramar.py',24),
  ('reconhece -> ciclos','reconhece',1,'p_reconhece','myGramar.py',25),
  ('reconhece -> print','reconhece',1,'p_reconhece','myGramar.py',26),
  ('reconhece -> scan','reconhece',1,'p_reconhece','myGramar.py',27),
  ('reconhece -> devolve','reconhece',1,'p_reconhece','myGramar.py',28),
  ('reconhece -> atribuicao','reconhece',1,'p_reconhece','myGramar.py',29),
  ('reconhece -> tipos reconhece','reconhece',2,'p_reconheceComposto','myGramar.py',34),
  ('reconhece -> declara reconhece','reconhece',2,'p_reconheceComposto','myGramar.py',35),
  ('reconhece -> ciclos reconhece','reconhece',2,'p_reconheceComposto','myGramar.py',36),
  ('reconhece -> print reconhece','reconhece',2,'p_reconheceComposto','myGramar.py',37),
  ('reconhece -> scan reconhece','reconhece',2,'p_reconheceComposto','myGramar.py',38),
  ('reconhece -> atribuicao reconhece','reconhece',2,'p_reconheceComposto','myGramar.py',39),
  ('expression -> expression MULTIPLICACAO term','expression',3,'p_multiplicacao','myGramar.py',44),
  ('expression -> expression MULTIPLICACAO ID','expression',3,'p_multiplicacaoId','myGramar.py',48),
  ('expression -> expression DIVISAO term','expression',3,'p_divisao','myGramar.py',55),
  ('expression -> expression DIVISAO ID','expression',3,'p_divisaoId','myGramar.py',59),
  ('expression -> expression SOMA ID','expression',3,'p_somaId','myGramar.py',66),
  ('expression -> expression SOMA term','expression',3,'p_soma','myGramar.py',73),
  ('expression -> expression SUBTRACAO term','expression',3,'p_subtracao','myGramar.py',77),
  ('expression -> expression SUBTRACAO ID','expression',3,'p_subtracaoId','myGramar.py',81),
  ('expression -> NUM MOD NUM','expression',3,'p_modulo','myGramar.py',88),
  ('expression -> ID MOD NUM','expression',3,'p_moduloId','myGramar.py',92),
  ('expression -> NUM MOD ID','expression',3,'p_moduloNUMId','myGramar.py',99),
  ('expression -> ID MOD ID','expression',3,'p_moduloIdID','myGramar.py',106),
  ('factor -> NUM','factor',1,'p_fator','myGramar.py',113),
  ('factor -> REAL','factor',1,'p_fatorReal','myGramar.py',117),
  ('term -> factor','term',1,'p_termo','myGramar.py',121),
  ('expression -> term','expression',1,'p_expressao','myGramar.py',125),
  ('expression -> ID','expression',1,'p_expressaoId','myGramar.py',129),
  ('els -> comparacoes','els',1,'p_elementosC','myGramar.py',136),
  ('els -> term','els',1,'p_elementosC','myGramar.py',137),
  ('els -> ID','els',1,'p_elementosUnicos','myGramar.py',142),
  ('els -> BOOL','els',1,'p_elementosUnicos','myGramar.py',143),
  ('atribuicao -> ID PRE NUM PRD IGUAL expression','atribuicao',6,'p_atribuicaoArray','myGramar.py',156),
  ('atribuicao -> ID PRE ID PRD IGUAL expression','atribuicao',6,'p_atribuicaoArrayID','myGramar.py',163),
  ('atribuicao -> ID IGUAL ID PRE ID PRD','atribuicao',6,'p_atribuicaoIdArray','myGramar.py',170),
  ('atribuicao -> ID IGUAL ID PRE NUM PRD','atribuicao',6,'p_atribuicaoNumArray','myGramar.py',177),
  ('declara -> ARRAY PRE NUM PRD ID','declara',5,'p_declararArray','myGramar.py',185),
  ('declara -> DCLN ID IGUAL expression','declara',4,'p_declararNum','myGramar.py',196),
  ('declara -> DCLN ID','declara',2,'p_declararNumSolo','myGramar.py',206),
  ('declara -> DCLS ID','declara',2,'p_declararString','myGramar.py',216),
  ('declara -> DCLS ID IGUAL ASPAS ID ASPAS','declara',6,'p_declararStringSolo','myGramar.py',227),
  ('conjuncao -> els CONJUNCAO els','conjuncao',3,'p_conjuncao','myGramar.py',237),
  ('conjuncao -> els CONJUNCAO aux','conjuncao',3,'p_conjuncao','myGramar.py',238),
  ('disjuncao -> els DISJUNCAO els','disjuncao',3,'p_disjuncao','myGramar.py',243),
  ('disjuncao -> els DISJUNCAO aux','disjuncao',3,'p_disjuncao','myGramar.py',244),
  ('aux -> conjuncao','aux',1,'p_auxiliar','myGramar.py',249),
  ('aux -> disjuncao','aux',1,'p_auxiliar','myGramar.py',250),
  ('comparacoes -> expression IGUAL IGUAL expression','comparacoes',4,'p_comparacoes','myGramar.py',255),
  ('comparacoes -> aux IGUAL IGUAL aux','comparacoes',4,'p_comparacoes','myGramar.py',256),
  ('comparacoes -> aux MAIOR aux','comparacoes',3,'p_comparacoes','myGramar.py',257),
  ('comparacoes -> aux MENOR aux','comparacoes',3,'p_comparacoes','myGramar.py',258),
  ('comparacoes -> expression MAIOR expression','comparacoes',3,'p_comparacoes','myGramar.py',259),
  ('comparacoes -> expression MENOR expression','comparacoes',3,'p_comparacoes','myGramar.py',260),
  ('comparacoes -> term MAIOR term','comparacoes',3,'p_comparacoes','myGramar.py',261),
  ('comparacoes -> term MENOR term','comparacoes',3,'p_comparacoes','myGramar.py',262),
  ('comparacoes -> term IGUAL IGUAL term','comparacoes',4,'p_comparacoes','myGramar.py',263),
  ('comparacoes -> aux MAIOR IGUAL aux','comparacoes',4,'p_comparacoesComIgualdade','myGramar.py',274),
  ('comparacoes -> aux MENOR IGUAL aux','comparacoes',4,'p_comparacoesComIgualdade','myGramar.py',275),
  ('comparacoes -> expression MAIOR IGUAL expression','comparacoes',4,'p_comparacoesComIgualdade','myGramar.py',276),
  ('comparacoes -> expression MENOR IGUAL expression','comparacoes',4,'p_comparacoesComIgualdade','myGramar.py',277),
  ('comparacoes -> term MAIOR IGUAL term','comparacoes',4,'p_comparacoesComIgualdade','myGramar.py',278),
  ('comparacoes -> term MENOR IGUAL term','comparacoes',4,'p_comparacoesComIgualdade','myGramar.py',279),
  ('tipos -> aux','tipos',1,'p_tiposExpressao','myGramar.py',288),
  ('tipos -> expression','tipos',1,'p_tiposExpressao','myGramar.py',289),
  ('tipos -> comparacoes','tipos',1,'p_tiposExpressao','myGramar.py',290),
  ('tipos -> print','tipos',1,'p_tiposExpressao','myGramar.py',291),
  ('tipos -> devolve','tipos',1,'p_tiposExpressao','myGramar.py',292),
  ('tipos -> scan','tipos',1,'p_tiposExpressao','myGramar.py',293),
  ('tipos -> declara','tipos',1,'p_tiposExpressao','myGramar.py',294),
  ('statements -> stat','statements',1,'p_statements','myGramar.py',299),
  ('statements -> stat statements','statements',2,'p_statementsComposto','myGramar.py',303),
  ('stat -> atribuicao','stat',1,'p_stat','myGramar.py',307),
  ('stat -> tipos','stat',1,'p_stat','myGramar.py',308),
  ('stat -> ciclos','stat',1,'p_stat','myGramar.py',309),
  ('stat -> <empty>','stat',0,'p_statVazia','myGramar.py',314),
  ('atribuicao -> ID IGUAL expression','atribuicao',3,'p_atribuicao','myGramar.py',318),
  ('if -> IF tipos DOISPONTOS LPAREN statements RPAREN ELSE LPAREN statements RPAREN','if',10,'p_cicloIf','myGramar.py',325),
  ('if -> IF tipos DOISPONTOS LPAREN statements RPAREN','if',6,'p_cicloIfSolo','myGramar.py',331),
  ('sinal -> SOMA','sinal',1,'p_sinal','myGramar.py',337),
  ('sinal -> SUBTRACAO','sinal',1,'p_sinal','myGramar.py',338),
  ('sinal -> MULTIPLICACAO','sinal',1,'p_sinal','myGramar.py',339),
  ('sinal -> DIVISAO','sinal',1,'p_sinal','myGramar.py',340),
  ('for -> FOR ID UNTIL comparacoes VIRG sinal NUM DOISPONTOS LPAREN statements RPAREN','for',11,'p_cicloFor','myGramar.py',352),
  ('while -> WHILE tipos DOISPONTOS LPAREN statements RPAREN','while',6,'p_cicloWhile','myGramar.py',359),
  ('ciclos -> if','ciclos',1,'p_cicloSIf','myGramar.py',366),
  ('ciclos -> for','ciclos',1,'p_cicloSFor','myGramar.py',372),
  ('ciclos -> while','ciclos',1,'p_cicloSWhile','myGramar.py',378),
  ('print -> PRINT LPAREN ID RPAREN','print',4,'p_printId','myGramar.py',384),
  ('print -> PRINT LPAREN ASPAS ID ASPAS RPAREN','print',6,'p_print','myGramar.py',391),
  ('print -> PRINT LPAREN ASPAS term ASPAS RPAREN','print',6,'p_printN','myGramar.py',396),
  ('print -> PRINT LPAREN ASPAS ID ASPAS VIRG expression RPAREN','print',8,'p_printComposto','myGramar.py',401),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_printExpressao','myGramar.py',406),
  ('print -> PRINT LPAREN VIRG RPAREN','print',4,'p_printVirgula','myGramar.py',410),
  ('scan -> SCAN LPAREN ID RPAREN','scan',4,'p_scan','myGramar.py',414),
  ('devolve -> RETURN LPAREN expression RPAREN','devolve',4,'p_return','myGramar.py',423),
]
